<pkmkdoc spec="1.12"><properties><title>libmaa</title><organization>org.rudix</organization><userSees ui="easy"/><min-target os="3"/><domain anywhere="true"/></properties><distribution><versions min-spec="1.000000"/><scripts></scripts></distribution><description>Low-level data structures and memory management</description><contents><choice title="libmaa-install" id="choice0" starts_selected="true" starts_enabled="true" starts_hidden="false"><pkgref id="org.rudix.pkg.libmaa"/></choice></contents><resources bg-scale="none" bg-align="topleft"><locale lang="en"><resource relative="true" mod="true" type="license">libmaa-1.2.0/COPYING.LIB</resource><resource mime-type="text/rtf" kind="embedded" type="readme"><![CDATA[{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf250
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs26 \cf0 The libmaa library provides many low-level data structures which are helpful for writing compilers, including hash tables, sets, lists, debugging support, and memory management.  \
\
Although libmaa was designed and implemented as a foundation for the kheperalong, the data structures are generally applicable to a wide range of programming problems.\
\
The memory management routines are especially helpful for improving the performance of memory-intensive applications.\
}]]></resource></locale></resources><flags/><item type="file">01libmaa.xml</item><mod>properties.title</mod><mod>description</mod></pkmkdoc>